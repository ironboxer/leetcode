"""
https://leetcode-cn.com/problems/stone-game/


877. 石子游戏
亚历克斯和李用几堆石子在做游戏。偶数堆石子排成一行，每堆都有正整数颗石子 piles[i] 。

游戏以谁手中的石子最多来决出胜负。石子的总数是奇数，所以没有平局。

亚历克斯和李轮流进行，亚历克斯先开始。 每回合，玩家从行的开始或结束处取走整堆石头。 这种情况一直持续到没有更多的石子堆为止，此时手中石子最多的玩家获胜。

假设亚历克斯和李都发挥出最佳水平，当亚历克斯赢得比赛时返回 true ，当李赢得比赛时返回 false 。



示例：

输入：[5,3,4,5]
输出：true
解释：
亚历克斯先开始，只能拿前 5 颗或后 5 颗石子 。
假设他取了前 5 颗，这一行就变成了 [3,4,5] 。
如果李拿走前 3 颗，那么剩下的是 [4,5]，亚历克斯拿走后 5 颗赢得 10 分。
如果李拿走后 5 颗，那么剩下的是 [3,4]，亚历克斯拿走后 4 颗赢得 9 分。
这表明，取前 5 颗石子对亚历克斯来说是一个胜利的举动，所以我们返回 true 。


提示：

2 <= piles.length <= 500
piles.length 是偶数。
1 <= piles[i] <= 500
sum(piles) 是奇数。

"""


from typing import List

from functools import lru_cache

# SLOW but work
# TLE
class Solution:
    def stoneGame(self, piles: List[int]) -> bool:
        self.nums = piles
        return self.play(0, len(piles) - 1) > 0

    @lru_cache
    def play(self, low, high):
        print(low, high)
        if low > high:
            return 0
        A = self.nums[low] - self.play(low+1, high)
        B = self.nums[high] - self.play(low, high - 1)
        return max(A, B)


if __name__ == '__main__':
    nums = [7,7,12,16,41,48,41,48,11,9,34,2,44,30,27,12,11,39,31,8,23,11,47,25,15,23,4,17,11,50,16,50,38,34,48,27,16,24,22,48,50,10,26,27,9,43,13,42,46,24]
    print(Solution().stoneGame(nums))

    nums = [364,26,430,378,394,280,389,452,269,102,307,224,299,383,294,203,118,265,343,283,265,100,385,120,361,439,417,298,315,125,463,112,326,129,213,463,286,109,405,35,143,423,179,239,319,404,141,194,126,490,470,492,61,435,372,189,266,27,34,33,36,361,42,493,56,359,46,453,9,426,44,485,81,394,250,465,481,346,240,10,342,419,137,63,453,370,35,232,205,51,292,266,229,172,489,322,309,350,307,209,135,264,124,279,328,282,112,49,264,46,200,169,16,105,154,449,140,175,500,479,157,197,272,84,201,260,327,181,412,495,328,465,146,109,188,58,366,444,238,427,282,230,432,278,249,89,80,91,427,420,155,36,22,327,22,147,306,315,344,439,302,5,436,83,109,312,493,110,189,354,15,254,497,58,403,202,115,193,71,214,247,462,284,458,33,293,421,204,263,89,13,446,252,208,91,67,190,461,23,296,128,349,468,320,278,420,413,153,406,232,23,100,215,20,282,162,399,163,23,414,67,395,350,435,348,239,189,314,232,276,397,337,212,110,186,192,174,430,339,161,175,403,249,59,421,235,318,370,472,478,445,399,432,207,483,407,281,52,485,280,488,150,143,408,104,428,121,87,308,217,412,315,260,126,118,225,398,245,429,118,438,414,486,295,361,98,299,235,47,371,491,380,373,411,120,329,166,211,331,251,426,88,484,345,468,159,234,178,168,423,413,295,187,273,398,334,217,292,118,86,93,246,61,186,279,328,300,483,25,203,28,493,39,321,479,78,432,160,139,34,398,247,288,273,120,157,37,155,339,27,360,405,57,147,232,42,147,88,322,32,337,292,383,93,16,43,315,306,454,204,263,344,465,132,489,291,488,384,35,258,273,483,263,392,70,181,244,189,22,452,423,312,251,38,351,120,280,254,310,248,301,328,87,90,226,302,35,329,118,201,117,170,140,397,81,379,306,320,342,143,146,34,138,257,472,348,185,6,185,367,168,130,402,94,152,336,288,194,385,364,368,207,383,402,65,117,482,30,491,244,90,422,251,203,497,488,30,10,455,374,31,237,45,293,39,235,288,395,29,464,281,351,43,257,21,138,12,260,215,323,18,440,351,30,438,179,11,43,4,55,244,470,114,325,17,223,356,456,498,238]
    print(Solution().stoneGame(nums))

